set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh
set-option -g set-titles on
#set-option -g set-titles-string '#T'
set-option -g base-index 1
set-option -g history-limit 30000
set-window-option -g pane-base-index 1
set-window-option -g automatic-rename off
set-window-option -g allow-rename off
set -g prefix C-a

# Mouse works as expected
setw -g mouse on


# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use the system clipboard
####set-option -g default-command "reattach-to-user-namespace -l zsh"
# C-l is taken over by vim style pane navigation
# bind C-l send-keys 'C-l'

# Status Bar 
#set -g status-bg black
#set -g status-fg white
#set -g status-right "#[fg=green] #S #T"
##set-window-option -g window-status-current-bg red
#set-window-option -g monitor-activity on

# set-option -g status-position bottom
# set-option -g status-style bg=black,fg=white
# set-option -g automatic-rename off
# set-option -g status-left-length 10
# set-option -g status-left  '[#{session_name}] '
# #set-option -g status-right


#source "/usr/local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"

run-shell "powerline-daemon -q"
source "/Users/rmcclain/Library/Python/3.8/lib/python/site-packages/powerline/bindings/tmux/powerline.conf"


# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -g status-keys vi

bind | split-window -h # Split panes horizontal
bind - split-window -v

# Update default binding of `Enter` to also use copy-pipe
###unbind -T copy-mode-vi Enter
###bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"


# vi style bindings for moving around panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind c
bind + new-window
bind c copy-mode
unbind [
unbind p
bind p paste-buffer

###bind p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Escape send -X cancel
bind y run "tmux save-buffer - | pbcopy"]

#set-option -g default-command "reattach-to-user-namespace -l $SHELL"

bind b previous-window

# Alpine Mail client vim type bindings
#is_alpine='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(alpine)?$"'
#bind-key -n j if-shell "$is_alpine" "send-keys Down" "send-keys j"
#bind-key -n k if-shell "$is_alpine" "send-keys Up" "send-keys k"
#bind-key -n h if-shell "$is_alpine" "send-keys Left" "send-keys h"
#bind-key -n l if-shell "$is_alpine" "send-keys Right" "send-keys l"


# Are these needed with tmux-pilot? 
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"


is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


# All of the vim integration for navigating and resizing is taken from https://github.com/aserowy/tmux.nvim

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1


set-option -g renumber-windows on

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
set -g @continuum-save-interval '5'

set -s escape-time 0

set-option -g status-interval 60
#set-option -g status-right "#[fg=blue,bright]#(gcalcli agenda \"$(date)\"| head -2 | tail -1 | awk -F '  ' '{print $2}') #(gcalcli agenda \"$(date)\"| head -2 | tail -1 | awk -F '  ' '{print $3}')" 
set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "

set-option -g focus-events on

#set-option -sa terminal-overrides ',xterm-256color:RGB'
#set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

setw -g window-status-current-style fg=black,bg=green

TMUX_FZF_SED="/usr/local/opt/gnu-sed/libexec/gnubin/sed"


#source "$HOME/.config/tmux/pilot.conf"

#-------------------------------------------------------#
# Pane colours
#-------------------------------------------------------#
# set active-inactive window styles
set -g window-style 'fg=colour247,bg=colour235'
set -g window-active-style 'fg=default,bg=colour0'

# Pane border
set -g pane-border-style bg=default,fg=red
set -g pane-active-border-style bg=green,fg=green


set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
