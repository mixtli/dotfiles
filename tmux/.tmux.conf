set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh
set-option -g set-titles on
set-option -g base-index 1
set-option -g history-limit 30000
set-window-option -g pane-base-index 1
set-window-option -g automatic-rename off
set-window-option -g allow-rename off
set -g prefix C-a

# Mouse works as expected
setw -g mouse on

set -g set-clipboard on

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'


setw -g mode-keys vi

run-shell "powerline-daemon -q"
source "/usr/local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf"


# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -g status-keys vi

bind | split-window -h # Split panes horizontal
bind - split-window -v


bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind c
bind + new-window
bind c copy-mode
unbind [
unbind p
bind p paste-buffer

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Escape send -X cancel


bind b previous-window

# Alpine Mail client vim type bindings
#is_alpine='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(alpine)?$"'
#bind-key -n j if-shell "$is_alpine" "send-keys Down" "send-keys j"
#bind-key -n k if-shell "$is_alpine" "send-keys Up" "send-keys k"
#bind-key -n h if-shell "$is_alpine" "send-keys Left" "send-keys h"
#bind-key -n l if-shell "$is_alpine" "send-keys Right" "send-keys l"


is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1


# Binding to quickly switch windows using fzf
bind-key -r w run-shell -b "$HOME/.tmux/plugins/tmux-fzf/scripts/window.sh switch"
bind-key -n 'C-Space' run-shell -b "$HOME/.tmux/plugins/tmux-fzf/scripts/window.sh switch"



set-option -g renumber-windows on

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
set -g @continuum-save-interval '5'

set -s escape-time 0

set-option -g status-interval 60
set -g status-right "#(/bin/bash $HOME/.tmux/kube-tmux/kube.tmux 250 red cyan) #[fg=green,bg=default,bright]#(tmux-mem-cpu-load)"
set-option -g focus-events on

# Press Ctrl-a a to send an actual Ctrl-a
bind-key a send-prefix

bind-key -n M-e display-popup -E "$HOME/dotfiles/scripts/jira_menu.sh"
bind-key -n M-9 display-popup -E "$HOME/dotfiles/scripts/jira_menu.sh"

bind-key -n M-c display-popup "$HOME/dotfiles/scripts/command_menu.sh"
bind-key c display-popup "$HOME/dotfiles/scripts/command_menu.sh"
bind-key J display-popup -E "$HOME/dotfiles/scripts/jira_menu.sh"
bind-key g display-popup -E "$HOME/dotfiles/scripts/github_pr_menu.sh"
bind-key d display-popup -E "$HOME/bin/cht.sh"

#set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ',alacritty:RGB'


setw -g window-status-current-style fg=black,bg=green

TMUX_FZF_SED="/usr/local/opt/gnu-sed/libexec/gnubin/sed"

set -g window-active-style 'fg=#d0cfcc,bg=#000000'
set -g window-style 'fg=#d0cfcc,bg=#555555'

set -g pane-border-style bg=default,fg=red


set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'


# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'
